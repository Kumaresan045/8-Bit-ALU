$date
	Mon Nov 07 01:58:44 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fatb $end
$var wire 8 ! res [7:0] $end
$var reg 8 " op1 [7:0] $end
$var reg 8 # op2 [7:0] $end
$var reg 8 $ select [7:0] $end
$scope module m1 $end
$var wire 1 % carry_final $end
$var wire 8 & op1 [7:0] $end
$var wire 8 ' op2 [7:0] $end
$var wire 8 ( op2_dec [7:0] $end
$var wire 8 ) op2_inc [7:0] $end
$var wire 8 * select [7:0] $end
$var wire 4 + select2 [3:0] $end
$var wire 8 , result [7:0] $end
$var wire 8 - res3 [7:0] $end
$var wire 8 . res2 [7:0] $end
$var wire 8 / res1 [7:0] $end
$var wire 8 0 res0 [7:0] $end
$var wire 8 1 op2_sub [7:0] $end
$var wire 8 2 op2_final [7:0] $end
$scope module fun1 $end
$var wire 1 % c0 $end
$var wire 8 3 op1 [7:0] $end
$var wire 8 4 res [7:0] $end
$var wire 8 5 op2 [7:0] $end
$var wire 9 6 carry [8:0] $end
$scope module fai[0] $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 c_in $end
$var wire 1 : c_out $end
$var wire 1 ; g $end
$var wire 1 < g1 $end
$var wire 1 = p $end
$var wire 1 > s $end
$upscope $end
$scope module fai[1] $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A c_in $end
$var wire 1 B c_out $end
$var wire 1 C g $end
$var wire 1 D g1 $end
$var wire 1 E p $end
$var wire 1 F s $end
$upscope $end
$scope module fai[2] $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I c_in $end
$var wire 1 J c_out $end
$var wire 1 K g $end
$var wire 1 L g1 $end
$var wire 1 M p $end
$var wire 1 N s $end
$upscope $end
$scope module fai[3] $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q c_in $end
$var wire 1 R c_out $end
$var wire 1 S g $end
$var wire 1 T g1 $end
$var wire 1 U p $end
$var wire 1 V s $end
$upscope $end
$scope module fai[4] $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y c_in $end
$var wire 1 Z c_out $end
$var wire 1 [ g $end
$var wire 1 \ g1 $end
$var wire 1 ] p $end
$var wire 1 ^ s $end
$upscope $end
$scope module fai[5] $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a c_in $end
$var wire 1 b c_out $end
$var wire 1 c g $end
$var wire 1 d g1 $end
$var wire 1 e p $end
$var wire 1 f s $end
$upscope $end
$scope module fai[6] $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i c_in $end
$var wire 1 j c_out $end
$var wire 1 k g $end
$var wire 1 l g1 $end
$var wire 1 m p $end
$var wire 1 n s $end
$upscope $end
$scope module fai[7] $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q c_in $end
$var wire 1 r c_out $end
$var wire 1 s g $end
$var wire 1 t g1 $end
$var wire 1 u p $end
$var wire 1 v s $end
$upscope $end
$upscope $end
$scope module fun2 $end
$var wire 8 w op1 [7:0] $end
$var wire 8 x op2 [7:0] $end
$var wire 8 y res [7:0] $end
$upscope $end
$scope module fun3 $end
$var wire 8 z op1 [7:0] $end
$var wire 8 { op2 [7:0] $end
$var wire 8 | res [7:0] $end
$upscope $end
$scope module fun4 $end
$var wire 8 } op1 [7:0] $end
$var wire 8 ~ res [7:0] $end
$upscope $end
$scope module noti $end
$var wire 8 !" op1 [7:0] $end
$var wire 8 "" res [7:0] $end
$upscope $end
$scope module sel0 $end
$var wire 8 #" cand1 [7:0] $end
$var wire 8 $" cand2 [7:0] $end
$var wire 8 %" cand3 [7:0] $end
$var wire 8 &" cand4 [7:0] $end
$var wire 8 '" otpt [7:0] $end
$var wire 4 (" select [3:0] $end
$var wire 8 )" and4 [7:0] $end
$var wire 8 *" and3 [7:0] $end
$var wire 8 +" and2 [7:0] $end
$var wire 8 ," and1 [7:0] $end
$scope module gate1 $end
$var wire 8 -" op1 [7:0] $end
$var wire 1 ." op2 $end
$var wire 8 /" res [7:0] $end
$upscope $end
$scope module gate2 $end
$var wire 8 0" op1 [7:0] $end
$var wire 1 1" op2 $end
$var wire 8 2" res [7:0] $end
$upscope $end
$scope module gate3 $end
$var wire 8 3" op1 [7:0] $end
$var wire 1 4" op2 $end
$var wire 8 5" res [7:0] $end
$upscope $end
$scope module gate4 $end
$var wire 8 6" op1 [7:0] $end
$var wire 1 7" op2 $end
$var wire 8 8" res [7:0] $end
$upscope $end
$upscope $end
$scope module sel1 $end
$var wire 8 9" cand1 [7:0] $end
$var wire 8 :" cand2 [7:0] $end
$var wire 8 ;" cand3 [7:0] $end
$var wire 8 <" cand4 [7:0] $end
$var wire 8 =" otpt [7:0] $end
$var wire 4 >" select [3:0] $end
$var wire 8 ?" and4 [7:0] $end
$var wire 8 @" and3 [7:0] $end
$var wire 8 A" and2 [7:0] $end
$var wire 8 B" and1 [7:0] $end
$scope module gate1 $end
$var wire 8 C" op1 [7:0] $end
$var wire 1 D" op2 $end
$var wire 8 E" res [7:0] $end
$upscope $end
$scope module gate2 $end
$var wire 8 F" op1 [7:0] $end
$var wire 1 G" op2 $end
$var wire 8 H" res [7:0] $end
$upscope $end
$scope module gate3 $end
$var wire 8 I" op1 [7:0] $end
$var wire 1 J" op2 $end
$var wire 8 K" res [7:0] $end
$upscope $end
$scope module gate4 $end
$var wire 8 L" op1 [7:0] $end
$var wire 1 M" op2 $end
$var wire 8 N" res [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 N"
0M"
b1010100 L"
b0 K"
0J"
b11101111 I"
b0 H"
0G"
b10001000 F"
b1110111 E"
1D"
b1110111 C"
b1110111 B"
b0 A"
b0 @"
b0 ?"
b1 >"
b1110111 ="
b1010100 <"
b11101111 ;"
b10001000 :"
b1110111 9"
b0 8"
07"
b11111111 6"
b0 5"
04"
b1 3"
b0 2"
01"
b110011 0"
b11001100 /"
1."
b11001100 -"
b11001100 ,"
b0 +"
b0 *"
b0 )"
b1 ("
b11001100 '"
b11111111 &"
b1 %"
b110011 $"
b11001100 #"
b110011 ""
b11001100 !"
b1010100 ~
b10101011 }
b11101111 |
b11001100 {
b10101011 z
b10001000 y
b11001100 x
b10101011 w
0v
0u
0t
1s
1r
0q
1p
1o
1n
1m
0l
0k
0j
0i
1h
0g
1f
1e
0d
0c
0b
0a
0`
1_
1^
0]
0\
0[
0Z
1Y
0X
0W
0V
0U
0T
1S
1R
0Q
1P
1O
1N
1M
0L
0K
0J
0I
1H
0G
1F
1E
0D
0C
0B
0A
0@
1?
1>
1=
0<
0;
0:
09
08
17
b100010000 6
b11001100 5
b1110111 4
b10101011 3
b11001100 2
b110011 1
b1110111 0
b10001000 /
b11101111 .
b1010100 -
b1110111 ,
b1 +
b10 *
b1 )
b11111111 (
b11001100 '
b10101011 &
0%
b10 $
b11001100 #
b10101011 "
b1110111 !
$end
#20
0a
1I
0Y
1i
0Z
1A
1v
0r
1n
0f
1b
0\
1^
1V
0R
1N
1F
1B
b11011111 !
b11011111 ,
b11011111 ="
1u
0s
0m
0e
1c
1]
1U
0S
0M
0E
1C
0=
1;
1:
b11011111 B"
b11011111 E"
0p
0h
1`
1X
0P
0H
1@
18
0<
b11011111 0
b11011111 4
b11011111 9"
b11011111 C"
1>
b110011 2
b110011 5
b110011 '"
19
b0 ,"
b0 /"
b110011 +"
b110011 2"
0."
11"
b1000111 6
1%
b10 ("
b100 $
b100 *
#40
1N
0n
1I
0i
1f
0b
0^
1D
0F
1B
b10101100 !
b10101100 ,
b10101100 ="
1e
0c
0]
1E
0C
b10101100 B"
b10101100 E"
0`
0X
0@
b10101100 0
b10101100 4
b10101100 9"
b10101100 C"
0>
b1 2
b1 5
b1 '"
09
b0 +"
b0 2"
b1 *"
b1 5"
01"
14"
b110 6
0%
b100 ("
b1000 $
b1000 *
#60
1a
1q
1Z
1j
1\
1l
1Q
1Y
1i
b10101010 !
b10101010 ,
b10101010 ="
1J
b10101010 B"
b10101010 E"
1v
1r
0n
1f
1b
0^
1V
b111111110 6
1R
1L
0N
0D
b10101010 0
b10101010 4
b10101010 9"
b10101010 C"
1F
0u
1s
1m
0e
1c
1]
0U
1S
1M
0E
1C
1p
1h
1`
1X
1P
1H
1@
b11111111 2
b11111111 5
b11111111 '"
b0 *"
b0 5"
b11111111 )"
b11111111 8"
04"
17"
b1000 ("
b10000 $
b10000 *
#80
0Q
0a
0q
0A
0I
0Y
0i
0j
0Z
0J
0t
1v
0r
0l
0n
0d
1f
0b
0\
0^
0T
1V
0R
0L
0N
0D
1F
0B
b10101011 0
b10101011 4
b10101011 9"
b10101011 C"
1>
b0 6
0:
1u
0s
0m
1e
0c
0]
1U
0S
0M
1E
0C
1=
0;
0p
0h
0`
0X
0P
0H
0@
08
b0 2
b0 5
b0 '"
b10001000 !
b10001000 ,
b10001000 ="
b0 B"
b0 E"
b0 )"
b0 8"
b10001000 A"
b10001000 H"
0D"
07"
1G"
b0 ("
b10 +
b10 >"
b100000 $
b100000 *
#100
b11101111 !
b11101111 ,
b11101111 ="
b0 A"
b0 H"
b11101111 @"
b11101111 K"
0G"
1J"
b100 +
b100 >"
b1000000 $
b1000000 *
#120
b1010100 !
b1010100 ,
b1010100 ="
b0 @"
b0 K"
b1010100 ?"
b1010100 N"
0J"
1M"
b1000 +
b1000 >"
b10000000 $
b10000000 *
#140
